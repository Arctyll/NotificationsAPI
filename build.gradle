buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.arctyll'
version = '1.0'
archivesBaseName = 'NotificationsAPI'

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    coreMod = "com.arctyll.notificationsapi.Coremod"
}

jar {
    manifest {
        attributes(
            "FMLCorePlugin": "com.arctyll.notificationsapi.Coremod",
            "FMLCorePluginContainsMod": "true",
            "Implementation-Title": "NotificationsAPI",
            "Implementation-Version": version,
            "ForceLoadAsMod": "true"
        )
    }
}

if (!project.tasks.findByName("sourceJar")) {
    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
}

if (!project.tasks.findByName("javadocJar")) {
    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }
}

artifacts {
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
            artifact javadocJar

            groupId = 'com.arctyll'
            artifactId = 'notificationsapi'
            version = project.version

            pom.withXml {
                asNode().appendNode('name', 'NotificationsAPI')
                asNode().appendNode('description', 'A Minecraft Forge 1.8.9 coremod API for displaying rich notifications.')
                asNode().appendNode('url', 'https://github.com/arctyll/notificationsapi')

                def licensesNode = asNode().appendNode('licenses')
                def licenseNode = licensesNode.appendNode('license')
                licenseNode.appendNode('name', 'MIT License')
                licenseNode.appendNode('url', 'https://opensource.org/licenses/MIT')

                def developersNode = asNode().appendNode('developers')
                def devNode = developersNode.appendNode('developer')
                devNode.appendNode('id', 'arctyll')
                devNode.appendNode('name', 'Arctyll')
                devNode.appendNode('email', 'team@arctyll.com')

                def scmNode = asNode().appendNode('scm')
                scmNode.appendNode('connection', 'scm:git:git://github.com/arctyll/notificationsapi.git')
                scmNode.appendNode('developerConnection', 'scm:git:ssh://github.com/arctyll/notificationsapi.git')
                scmNode.appendNode('url', 'https://github.com/arctyll/notificationsapi')
            }
        }
    }

    repositories {
        maven {
            name = 'ossrh'
            url = version.endsWith("SNAPSHOT") ?
                    uri("https://s01.oss.sonatype.org/content/repositories/snapshots/") :
                    uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign configurations.archives
}
